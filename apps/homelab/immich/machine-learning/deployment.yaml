---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-machine-learning
  namespace: immich
  labels:
    app.kubernetes.io/instance: immich
    app.kubernetes.io/name: machine-learning
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: machine-learning
      app.kubernetes.io/instance: immich
  template:
    metadata:
      labels:
        app.kubernetes.io/name: machine-learning
        app.kubernetes.io/instance: immich
    spec:
      containers:
        - name: immich-machine-learning
          image: ghcr.io/immich-app/immich-machine-learning:v1.142.1
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  key: dbname
                  name: postgres-app
            - name: DB_HOSTNAME
              valueFrom:
                secretKeyRef:
                  key: host
                  name: postgres-app
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgres-app
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: user
                  name: postgres-app
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://immich-machine-learning:3003
            - name: REDIS_HOSTNAME
              value: redis-master.redis
            - name: TRANSFORMERS_CACHE
              value: /cache
          ports:
            - name: http
              containerPort: 3003
              protocol: TCP
          volumeMounts:
            - name: cache
              mountPath: /cache
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 60
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
      volumes:
        - name: cache
          emptyDir: {}
